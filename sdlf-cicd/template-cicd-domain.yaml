AWSTemplateFormatVersion: 2010-09-09
Description: CICD resources to handle deployment of a new domain

Parameters:
  pArtifactsBucket:
    Description: The artifacts bucket used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/DevOpsArtifactsBucket
  pKMSKey:
    Description: The KMS key used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/KMS/CICDKeyId
  pCicdRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/CicdCodeCommit
  pPipelineRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/PipelineCodeCommit
  pDatasetRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/DatasetCodeCommit
  pStageARepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/StageACodeCommit
  pStageBRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/StageBCodeCommit
  pDatalakeLibraryRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/DatalakeLibraryCodeCommit
  pPipLibraryRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/PipLibraryCodeCommit
  pUtilsRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/UtilsCodeCommit
  pBuildCloudformationModuleStage:
    Description: CodeBuild job that build a CloudFormation module from a SAM template
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildCloudformationModuleStage
  pBuildDeployDatalakeLibraryLayer:
    Description: CodeBuild job that packages the Datalake Libs into a Lambda Layer
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildDeployDatalakeLibraryLayer
  pBuildDeployRequirementsLayer:
    Description: CodeBuild job that creates a Lambda Layer containing the libraries and version numbers listed in the requirements.txt file in the repository provided
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildDeployRequirementsLayer
  pMainRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/MainCodeCommit
  pChildAccountId:
    Description: Child AWS account ID
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
  pDomain:
    Description: Name of the data domain (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]{2,9}"
  pEnvironment:
    Description: Environment name
    Type: String
    AllowedValues: [dev, test, prod]
  pDatalakeLibsLambdaLayerName:
    Description: Name to give the Lambda Layer containing the Datalake Library.
    Type: String
    Default: datalake-lib-layer
  pDefaultPipLibrariesLambdaLayerName:
    Description: Name to give the Lambda Layer containing the libraries installed through Pip.
    Type: String
    Default: default-pip-libraries
  pRunCodeCoverage:
    Description: "Creates code coverage reports from the unit tests included in `pDatalakeLibraryRepository`. Enforces the minimum threshold specified in `pMinTestCoverage`"
    Type: String
    AllowedValues: ["false", "true"]
    Default: "false"
  pBuildCloudFormationPackage:
    Description: CodeBuild job that packages a CloudFormation template
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildCloudFormationPackage
  pMainRepositoryPipeline:
    Description: CodePipeline that triggers on sdlf-main changes
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodePipeline/MainRepositoryPipeline

Mappings:
  pCodeCommitBranch:
    dev:
      branch: dev
    test:
      branch: test
    prod:
      branch: master

Conditions:
  RunUnitTestingStage: !Equals
    - !Ref pRunCodeCoverage
    - "true"
  NotRunUnitTestingStage: !Not
    - Condition: RunUnitTestingStage

Resources:
  ######## LAMBDA LAYERS ########
  rCommonPipLibs:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: rDatalakePipelineTriggerRule
    Properties:
      RoleArn: !GetAtt rModulesCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref pPipLibraryRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildDeployRequirementsLayer
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"}]
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS
        Location: !Ref pArtifactsBucket

  rDatalakePipelineTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Trigger team Data Lake Library pipeline"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatalakeLibraryRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      Targets:
        - Arn:
            !If [
              NotRunUnitTestingStage,
              !Sub "arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCommonDatalakeLibs}",
              !Sub "arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCommonDatalakeTestLibs}",
            ]
          Id: !Sub sdlf-${pDatalakeLibsLambdaLayerName}-trigger
          RoleArn: !GetAtt rEventsRepositoryTriggerRole.Arn

  # rDatalakePipelineFailedRule:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     Name: !Sub sdlf-${pDatalakeLibsLambdaLayerName}-failure
  #     Description: "Notify team of Data Lake Library pipeline failure"
  #     EventPattern:
  #       source:
  #         - aws.codepipeline
  #       detail-type:
  #         - CodePipeline Pipeline Execution State Change
  #       detail:
  #         state:
  #           - FAILED
  #         pipeline:
  #           - !If [
  #               NotRunUnitTestingStage,
  #               !Ref rCommonDatalakeLibs,
  #               !Ref rCommonDatalakeTestLibs,
  #             ]
  #     State: ENABLED
  #     Targets:
  #       - Arn: !Ref rSNSTopic
  #         Id: !Sub sdlf-${pDatalakeLibsLambdaLayerName}-failure
  #         InputTransformer:
  #           InputTemplate:
  #             !If [
  #               NotRunUnitTestingStage,
  #               !Sub '"The Pipeline <pipeline> has failed. Go to https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${rCommonDatalakeLibs}"',
  #               !Sub '"The Pipeline <pipeline> has failed. Go to https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${rCommonDatalakeTestLibs}"',
  #             ]
  #           InputPathsMap:
  #             pipeline: $.detail.pipeline

  rPipPipelineTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Trigger team Pip Library pipeline"
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pPipLibraryRepository}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCommonPipLibs}
          Id: !Sub sdlf-${pDefaultPipLibrariesLambdaLayerName}-trigger
          RoleArn: !GetAtt rEventsRepositoryTriggerRole.Arn

  # rPipPipelineFailedRule:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     Name: !Sub sdlf-${pDefaultPipLibrariesLambdaLayerName}-failure
  #     Description: "Notify admin team of Pip Library pipeline failure"
  #     EventPattern:
  #       source:
  #         - aws.codepipeline
  #       detail-type:
  #         - CodePipeline Pipeline Execution State Change
  #       detail:
  #         state:
  #           - FAILED
  #         pipeline:
  #           - !Ref rCommonPipLibs
  #     State: ENABLED
  #     Targets:
  #       - Arn: !Ref rSNSTopic
  #         Id: !Sub sdlf-${pDefaultPipLibrariesLambdaLayerName}-failure
  #         InputTransformer:
  #           InputTemplate: !Sub '"The Pipeline <pipeline> has failed. Go to https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${rCommonPipLibs}"'
  #           InputPathsMap:
  #             pipeline: $.detail.pipeline

  ######## LAMBDA LAYER PIPELINE #########
  rCommonDatalakeLibs:
    Type: AWS::CodePipeline::Pipeline
    Condition: NotRunUnitTestingStage
    Properties:
      RoleArn: !GetAtt rModulesCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref pDatalakeLibraryRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildDeployDatalakeLibraryLayer
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"}]
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS
        Location: !Ref pArtifactsBucket

  rCommonDatalakeTestLibs:
    Type: AWS::CodePipeline::Pipeline
    Condition: RunUnitTestingStage
    Properties:
      RoleArn: !GetAtt rModulesCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref pDatalakeLibraryRepository
                BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Test
          Actions:
            - Name: Test
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: "{{resolve:ssm:/SDLF/CodeBuild/TeamUnitTestCodeBuildProject}}"
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildDeployDatalakeLibraryLayer
                EnvironmentVariables: !Sub >-
                  [{"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"}]
              RunOrder: 1
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS
        Location: !Ref pArtifactsBucket

  ######## CODEPIPELINE #########
  rDomainCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-maincodepipelinesource
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GitPull
                  - codecommit:GetRepository
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pMainRepository}
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: !Ref pKMSKey
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildCloudFormationPackage}"
        - PolicyName: sdlf-cicd-cloudformation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-domain-crossaccount-pipeline

  rDomainCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt rDomainCodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: cicd-main
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Namespace: SourceVariables
              OutputArtifacts:
                - Name: TemplateSource
              Configuration:
                RepositoryName: !Ref pMainRepository
                BranchName:
                  !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                PollForSourceChanges: false
              RunOrder: 1
        - Name: BuildTemplate
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: TemplateSource
              OutputArtifacts:
                - Name: TemplatePackage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudFormationPackage
                EnvironmentVariables: !Sub >-
                  [{"name":"TEMPLATE", "value":"datadomain-${pDomain}-${pEnvironment}.yaml", "type":"PLAINTEXT"}]
              RunOrder: 1
        - Name: DeployFoundationsAndTeamsInfrastructure
          Actions:
            - Name: CreateStack
              RoleArn: !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-domain-crossaccount-pipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
                - Name: TemplatePackage
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-domain
                StackName: !Sub sdlf-domain-${pDomain}-${pEnvironment}
                TemplatePath: "TemplatePackage::packaged-template.yaml"
                TemplateConfiguration: "TemplateSource::tags.json"
                ParameterOverrides: |
                  {
                    "pPipelineReference" : "#{codepipeline.PipelineExecutionId}"
                  }
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref pArtifactsBucket
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS

  rMainCodeCommitTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-trigger-rule
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rDomainCodePipeline}

  rMainCodeCommitTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      State: ENABLED
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Pipeline Execution State Change
        resources:
          - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${pMainRepositoryPipeline}
        detail:
          state:
            - SUCCEEDED
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rDomainCodePipeline}
          RoleArn: !GetAtt rMainCodeCommitTriggerRole.Arn
          Id: sdlf-cicd-domain

  rEventsRepositoryTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-events-trigger
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rModulesPipeline}
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:sdlf-stage-*

  rChildAccountIdSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /SDLF/Misc/Domains/${pDomain}/${pEnvironment}/AccountId
      Type: String
      Value: !Ref pChildAccountId
      Description: !Sub ${pDomain} ${pEnvironment} environment Child Account Id

  rDatalakeLibraryLayerSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/Lambda/LatestDatalakeLibraryLayer
      Type: String
      Value: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:${pDatalakeLibsLambdaLayerName}:1
      Description: The ARN of the latest version of the Datalake Library layer
  rPipLibrariesLayerSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /SDLF/Lambda/LatestDefaultPipLibraryLayer
      Type: String
      Value: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:${pDefaultPipLibrariesLambdaLayerName}:1
      Description: The ARN of the latest version of the Lambda Layer containing the Pip libraries
